how to align react to backened port for request
chart.js
axios Axios is a promise-based HTTP client for making requests to APIs. It is commonly used in React to fetch data from the backend because of its simpler syntax and automatic JSON parsing.
-----------------------------
video id out of url
How the getVideoId Function Works
The getVideoId function uses the URL class to parse the YouTube Shorts URL and extract the video ID. Here's a step-by-step breakdown:

    Create a URL object: const urlObject = new URL(url);
        This creates a new URL object from the provided URL string.
    Extract the pathname: const pathname = urlObject.pathname;
        The pathname property returns the path part of the URL, excluding the protocol, hostname, and query string.
    Split the pathname: const videoId = pathname.split('/').pop();
        The split('/') method splits the pathname into an array of substrings separated by forward slashes (/).
        The pop() method returns the last element of the array, which is the video ID.

Example Walkthrough
For the URL https://www.youtube.com/shorts/41L6QnmRsvk, here's how the function works:

    urlObject is created with the URL string.
    pathname is extracted: /shorts/41L6QnmRsvk.
    pathname is split: ['', 'shorts', '41L6QnmRsvk'].
    pop() returns the last element: 41L6QnmRsvk, which is the video ID.

The function returns the extracted video ID, which can then be used for further processing.



6. i was not adding background script for shorts 

7. how to get the weekly data by subtracting from current date
 const today=new Date();
  const currentDay=today.getDay();
  const diffOfDays=currentDay===0?6:currentDay-1;
   
  const monday=new Date(today);
  monday.setDate(today.getDate()-6)
  monday.setHours(0,0,0,0)
  today.setHours(23,59,59,999)
  const weeklyData = await CategoryWatchTime.find({
    date: {
      $gte: monday,
      $lte: today
    }
  });

  8. Getting the correct port of react for dashboard
  const POSSIBLE_PORTS = [5173, 3001, 5174, 5175, 3000]; 

async function getReactPort() {
    for (const port of POSSIBLE_PORTS) {
        try {
            // Fetch `manifest.json`, which React/Vite always serves
            const response = await fetch(`http://localhost:${port}/manifest.json`, { mode: "no-cors" });
            console.log(`React dev server found on port: ${port}`);
            return port; // Return the first successful port
        } catch (error) {
            continue; // Try next port if fetch fails
        }
    }
    return null; // No React frontend found
}
why manifest.json here
    React and Vite development servers typically serve the manifest.json file at the root of the application.
    By attempting to fetch manifest.json from a given port, the function can determine whether a React development server is running on that port.
    If the fetch is successful, it indicates that a React development server is running on that port, and the function can return the port number.